name: CI
concurrency: ci-${{ github.ref }}
on:
  push:
    branches: [master, main]
  workflow_dispatch:
jobs:
  id-account:
    runs-on: ubuntu-latest
    steps:
      - name: Identify test account and region
        env:
          AWS_ACCOUNT_NUMBER: ${{ vars.AWS_ACCOUNT_NUMBER }}
          AWS_DEFAULT_REGION: "us-west-2"
        run: |
          echo "${AWS_ACCOUNT_NUMBER}"
          echo ${AWS_DEFAULT_REGION} | sed 's/-/+/g'
  test-rolename:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install
        working-directory: rolename
        run: |
          npm install
      - name: Build
        working-directory: rolename
        run: |
          npm run build
      - name: Test
        working-directory: rolename
        run: |
          npm test
      - name: itest
        working-directory: rolename
        run: |
          npm run itest
  test-oidc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install
        working-directory: oidc
        run: |
          npm install
      - name: Build
        working-directory: oidc
        run: |
          npm run build
      - name: Test
        working-directory: oidc
        run: |
          npm test
  test-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          persist-credentials: false
      - name: Install infra
        working-directory: infra
        run: |
          npm install
      - name: Build infra
        working-directory: infra
        run: |
          npm run build
      - name: Test infra
        working-directory: infra
        run: |
          npm test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.TEST_ROLE }}
          aws-region: us-west-2
      - name: Deploy the app stack to the test account
        working-directory: infra
        run: |
          npx cdk bootstrap
          STACKNAME=$(npx @cdk-turnkey/stackname@2.1.0 --suffix app --hash 6)
          npx cdk deploy --require-approval never ${STACKNAME}
      - name: Deploy content (test account)
        working-directory: content
        run: |
          bash deploy-content.sh
      - name: Run integration test (test account)
        working-directory: itest
        run: |
          bash itest.sh
